{"version":3,"sources":["Welcome.js","PlayerSetup.js","PlayerStats.js","App.js","serviceWorker.js","index.js","resources/spaceship.png"],"names":["Welcome","id","src","spaceship","align","type","to","className","PlayerSetup","points","player","pPoints","fPoints","mPoints","ePoints","total","table","name","map","row","i","min","max","defaultValue","onChange","event","target","value","parseInt","console","log","colSpan","PlayerStats","App","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"js/main.13dc3798.chunk.js","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport spaceship from './resources/spaceship.png';\nimport './App.css';\n\nfunction Welcome() {\n  return (\n    <div id=\"Welcome\">\n      <div id=\"stars\">\n        <header id=\"Welcome-header\">\n          <h1>Welcome to Space Traders!</h1>\n        </header>\n        <div>\n          <img src={spaceship} id=\"spaceship\" align=\"left\"/>\n        </div>\n        <button type=\"button\" id=\"startButton\">\n          <Link to={'/PlayerSetup'} className=\"nav-link\">START</Link>\n        </button>\n        {/* <script type=\"text/javascript\">\n          document.querySelector(\"startButton\").addEventListner(\"click\",\n            function() {\n              document.getElementById(\"spaceship\").style.animation = \"nextScreen 1 25s ease-in-out\";\n            })\n        </script> */}\n      </div>\n    </div>\n  );\n}\n\nexport default Welcome;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport spaceship from './resources/spaceship.png';\nimport './App.css';\n\nfunction PlayerSetup() {\n  const types = [{name: 'Pilot:', id: 'p'}, {name: 'Fighter:', id: 'f'}, {name: 'Merchant:', id: 'm'}, {name: 'Engineer:', id: 'e'}]\n  const points = [1, 2, 3, 4, 5, 6, 7, 8]\n\n  let totalPoints = 6\n  let player = {pPoints: 1, fPoints: 1, mPoints: 1, ePoints: 1, total: 4}\n  const table = types.map((row) => \n    <tr>\n      <th>{row.name}</th>\n      {points.map(i => <td id={row.id + i}></td>)}\n      <td>\n        <input type=\"number\" name={row.id + 'skill'} min={1} max={8} defaultValue={1} onChange={(event) => {\n          if (row.id == 'p') {\n            if (player.total == totalPoints && event.target.value - player.pPoints > 0) {\n              event.target.value = player.pPoints\n              return;\n            }\n            player.pPoints = parseInt(event.target.value)\n            console.log(player.pPoints)\n          } else if (row.id == 'f') {\n            if (player.total == totalPoints && event.target.value - player.fPoints > 0) {\n              event.target.value = player.fPoints\n              return;\n            }\n            player.fPoints = parseInt(event.target.value)\n            console.log(player.fPoints)\n          } else if (row.id == 'm') {\n            if (player.total == totalPoints && event.target.value - player.mPoints > 0) {\n              event.target.value = player.mPoints\n              return;\n            }\n            player.mPoints = parseInt(event.target.value)\n            console.log(player.mPoints)\n          } else if (row.id == 'e') {\n            if (player.total == totalPoints && event.target.value - player.ePoints > 0) {\n              event.target.value = player.ePoints\n              return;\n            }\n            player.ePoints = parseInt(event.target.value)\n            console.log(player.ePoints)\n          }\n          player.total = player.pPoints + player.fPoints + player.mPoints + player.ePoints\n          console.log('total: ' + player.total)\n        }}></input>\n      </td>\n    </tr>\n  )\n  return (\n    <div id=\"Welcome\">\n      <div id=\"stars\">\n        <header id=\"Welcome-header\">\n          <h1>Choose Your Attributes</h1>\n        </header>\n        <div>\n          <img src={spaceship} id=\"spaceship\" align=\"left\"/>\n        </div>\n        <table id=\"Attribute-Table\">\n          <tr>\n            <th>Skill</th>\n            <th colSpan=\"8\">Level</th>\n            <th>Overall:</th>\n          </tr>\n          {table}\n        </table>\n        <button type=\"submit\" id=\"submitButton\">\n          <Link to={'/PlayerStats'} className=\"nav-link\">SUBMIT</Link>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default PlayerSetup;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport spaceship from './resources/spaceship.png';\nimport './App.css';\n\nfunction PlayerStats() {\n  return (\n    <div id=\"Welcome\">\n      <div id=\"stars\">\n        <header id=\"Welcome-header\">\n          <h1>Your Player</h1>\n        </header>\n        <div>\n          <img src={spaceship} id=\"spaceship\" align=\"left\"/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PlayerStats;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Welcome from './Welcome';\nimport PlayerSetup from './PlayerSetup';\nimport PlayerStats from './PlayerStats';\n\nclass App extends Component {\n  render() {\n    return (\n    <Router>\n        <div>\n          {/* <h2>Welcome to Space Trader!</h2>\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li><Link to={'/'} className=\"nav-link\"> Home </Link></li>\n            <li><Link to={'/PlayerSetup'} className=\"nav-link\">Player Setup</Link></li>\n          </ul>\n          </nav>\n          <hr /> */}\n          <Switch>\n              <Route exact path='/' component={Welcome} />\n              <Route path='/PlayerSetup' component={PlayerSetup} />\n              <Route path='/PlayerStats' component={PlayerStats} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"media/spaceship.4d290229.png\";"],"sourceRoot":""}